import time


def IP_trans(text, mode):  # text 64bit字符串 1为正变换
    IP_substitution = [58, 50, 42, 34, 26, 18, 10, 2, 60, 52, 44, 36, 28, 20, 12, 4,
                       62, 54, 46, 38, 30, 22, 14, 6, 64, 56, 48, 40, 32, 24, 16, 8,
                       57, 49, 41, 33, 25, 17, 9, 1, 59, 51, 43, 35, 27, 19, 11, 3,
                       61, 53, 45, 37, 29, 21, 13, 5, 63, 55, 47, 39, 31, 23, 15, 7]
    IP_inv_sub = [40, 8, 48, 16, 56, 24, 64, 32, 39, 7, 47, 15, 55, 23, 63, 31,
                  38, 6, 46, 14, 54, 22, 62, 30, 37, 5, 45, 13, 53, 21, 61, 29,
                  36, 4, 44, 12, 52, 20, 60, 28, 35, 3, 43, 11, 51, 19, 59, 27,
                  34, 2, 42, 10, 50, 18, 58, 26, 33, 1, 41, 9, 49, 17, 57, 25]
    result = ''
    if mode == 1:
        for i in IP_substitution:
            result += text[i - 1]
    else:
        for i in IP_inv_sub:
            result += text[i - 1]
    return result


def E(R, K):  # R 32bit字符串, K 48bit字符串
    result = ''
    for i in range(32):
        if i % 4 == 0:
            result += (R[i - 1] + R[i])
        elif i % 4 == 3:
            result += (R[i] + R[(i + 1) % 32])
        else:
            result += R[i]
    # print(hex(int(result, base=2)))
    result = bin(int(result, base=2) ^ int(K, base=2))[2:].zfill(48)
    # print(hex(int(result,base=2)))
    return result  # 48bit


def S_P_box(R):  # R 48bit字符串
    S_P_box0 = [0x00808200, 0x00000000, 0x00008000, 0x00808202,
                0x00808002, 0x00008202, 0x00000002, 0x00008000,
                0x00000200, 0x00808200, 0x00808202, 0x00000200,
                0x00800202, 0x00808002, 0x00800000, 0x00000002,
                0x00000202, 0x00800200, 0x00800200, 0x00008200,
                0x00008200, 0x00808000, 0x00808000, 0x00800202,
                0x00008002, 0x00800002, 0x00800002, 0x00008002,
                0x00000000, 0x00000202, 0x00008202, 0x00800000,
                0x00008000, 0x00808202, 0x00000002, 0x00808000,
                0x00808200, 0x00800000, 0x00800000, 0x00000200,
                0x00808002, 0x00008000, 0x00008200, 0x00800002,
                0x00000200, 0x00000002, 0x00800202, 0x00008202,
                0x00808202, 0x00008002, 0x00808000, 0x00800202,
                0x00800002, 0x00000202, 0x00008202, 0x00808200,
                0x00000202, 0x00800200, 0x00800200, 0x00000000,
                0x00008002, 0x00008200, 0x00000000, 0x00808002]
    S_P_box1 = [0x40084010, 0x40004000, 0x00004000, 0x00084010,
                0x00080000, 0x00000010, 0x40080010, 0x40004010,
                0x40000010, 0x40084010, 0x40084000, 0x40000000,
                0x40004000, 0x00080000, 0x00000010, 0x40080010,
                0x00084000, 0x00080010, 0x40004010, 0x00000000,
                0x40000000, 0x00004000, 0x00084010, 0x40080000,
                0x00080010, 0x40000010, 0x00000000, 0x00084000,
                0x00004010, 0x40084000, 0x40080000, 0x00004010,
                0x00000000, 0x00084010, 0x40080010, 0x00080000,
                0x40004010, 0x40080000, 0x40084000, 0x00004000,
                0x40080000, 0x40004000, 0x00000010, 0x40084010,
                0x00084010, 0x00000010, 0x00004000, 0x40000000,
                0x00004010, 0x40084000, 0x00080000, 0x40000010,
                0x00080010, 0x40004010, 0x40000010, 0x00080010,
                0x00084000, 0x00000000, 0x40004000, 0x00004010,
                0x40000000, 0x40080010, 0x40084010, 0x00084000]
    S_P_box2 = [0x00000104, 0x04010100, 0x00000000, 0x04010004,
                0x04000100, 0x00000000, 0x00010104, 0x04000100,
                0x00010004, 0x04000004, 0x04000004, 0x00010000,
                0x04010104, 0x00010004, 0x04010000, 0x00000104,
                0x04000000, 0x00000004, 0x04010100, 0x00000100,
                0x00010100, 0x04010000, 0x04010004, 0x00010104,
                0x04000104, 0x00010100, 0x00010000, 0x04000104,
                0x00000004, 0x04010104, 0x00000100, 0x04000000,
                0x04010100, 0x04000000, 0x00010004, 0x00000104,
                0x00010000, 0x04010100, 0x04000100, 0x00000000,
                0x00000100, 0x00010004, 0x04010104, 0x04000100,
                0x04000004, 0x00000100, 0x00000000, 0x04010004,
                0x04000104, 0x00010000, 0x04000000, 0x04010104,
                0x00000004, 0x00010104, 0x00010100, 0x04000004,
                0x04010000, 0x04000104, 0x00000104, 0x04010000,
                0x00010104, 0x00000004, 0x04010004, 0x00010100]
    S_P_box3 = [0x80401000, 0x80001040, 0x80001040, 0x00000040,
                0x00401040, 0x80400040, 0x80400000, 0x80001000,
                0x00000000, 0x00401000, 0x00401000, 0x80401040,
                0x80000040, 0x00000000, 0x00400040, 0x80400000,
                0x80000000, 0x00001000, 0x00400000, 0x80401000,
                0x00000040, 0x00400000, 0x80001000, 0x00001040,
                0x80400040, 0x80000000, 0x00001040, 0x00400040,
                0x00001000, 0x00401040, 0x80401040, 0x80000040,
                0x00400040, 0x80400000, 0x00401000, 0x80401040,
                0x80000040, 0x00000000, 0x00000000, 0x00401000,
                0x00001040, 0x00400040, 0x80400040, 0x80000000,
                0x80401000, 0x80001040, 0x80001040, 0x00000040,
                0x80401040, 0x80000040, 0x80000000, 0x00001000,
                0x80400000, 0x80001000, 0x00401040, 0x80400040,
                0x80001000, 0x00001040, 0x00400000, 0x80401000,
                0x00000040, 0x00400000, 0x00001000, 0x00401040]
    S_P_box4 = [0x00000080, 0x01040080, 0x01040000, 0x21000080,
                0x00040000, 0x00000080, 0x20000000, 0x01040000,
                0x20040080, 0x00040000, 0x01000080, 0x20040080,
                0x21000080, 0x21040000, 0x00040080, 0x20000000,
                0x01000000, 0x20040000, 0x20040000, 0x00000000,
                0x20000080, 0x21040080, 0x21040080, 0x01000080,
                0x21040000, 0x20000080, 0x00000000, 0x21000000,
                0x01040080, 0x01000000, 0x21000000, 0x00040080,
                0x00040000, 0x21000080, 0x00000080, 0x01000000,
                0x20000000, 0x01040000, 0x21000080, 0x20040080,
                0x01000080, 0x20000000, 0x21040000, 0x01040080,
                0x20040080, 0x00000080, 0x01000000, 0x21040000,
                0x21040080, 0x00040080, 0x21000000, 0x21040080,
                0x01040000, 0x00000000, 0x20040000, 0x21000000,
                0x00040080, 0x01000080, 0x20000080, 0x00040000,
                0x00000000, 0x20040000, 0x01040080, 0x20000080]
    S_P_box5 = [0x10000008, 0x10200000, 0x00002000, 0x10202008,
                0x10200000, 0x00000008, 0x10202008, 0x00200000,
                0x10002000, 0x00202008, 0x00200000, 0x10000008,
                0x00200008, 0x10002000, 0x10000000, 0x00002008,
                0x00000000, 0x00200008, 0x10002008, 0x00002000,
                0x00202000, 0x10002008, 0x00000008, 0x10200008,
                0x10200008, 0x00000000, 0x00202008, 0x10202000,
                0x00002008, 0x00202000, 0x10202000, 0x10000000,
                0x10002000, 0x00000008, 0x10200008, 0x00202000,
                0x10202008, 0x00200000, 0x00002008, 0x10000008,
                0x00200000, 0x10002000, 0x10000000, 0x00002008,
                0x10000008, 0x10202008, 0x00202000, 0x10200000,
                0x00202008, 0x10202000, 0x00000000, 0x10200008,
                0x00000008, 0x00002000, 0x10200000, 0x00202008,
                0x00002000, 0x00200008, 0x10002008, 0x00000000,
                0x10202000, 0x10000000, 0x00200008, 0x10002008]
    S_P_box6 = [0x00100000, 0x02100001, 0x02000401, 0x00000000,
                0x00000400, 0x02000401, 0x00100401, 0x02100400,
                0x02100401, 0x00100000, 0x00000000, 0x02000001,
                0x00000001, 0x02000000, 0x02100001, 0x00000401,
                0x02000400, 0x00100401, 0x00100001, 0x02000400,
                0x02000001, 0x02100000, 0x02100400, 0x00100001,
                0x02100000, 0x00000400, 0x00000401, 0x02100401,
                0x00100400, 0x00000001, 0x02000000, 0x00100400,
                0x02000000, 0x00100400, 0x00100000, 0x02000401,
                0x02000401, 0x02100001, 0x02100001, 0x00000001,
                0x00100001, 0x02000000, 0x02000400, 0x00100000,
                0x02100400, 0x00000401, 0x00100401, 0x02100400,
                0x00000401, 0x02000001, 0x02100401, 0x02100000,
                0x00100400, 0x00000000, 0x00000001, 0x02100401,
                0x00000000, 0x00100401, 0x02100000, 0x00000400,
                0x02000001, 0x02000400, 0x00000400, 0x00100001]
    S_P_box7 = [0x08000820, 0x00000800, 0x00020000, 0x08020820,
                0x08000000, 0x08000820, 0x00000020, 0x08000000,
                0x00020020, 0x08020000, 0x08020820, 0x00020800,
                0x08020800, 0x00020820, 0x00000800, 0x00000020,
                0x08020000, 0x08000020, 0x08000800, 0x00000820,
                0x00020800, 0x00020020, 0x08020020, 0x08020800,
                0x00000820, 0x00000000, 0x00000000, 0x08020020,
                0x08000020, 0x08000800, 0x00020820, 0x00020000,
                0x00020820, 0x00020000, 0x08020800, 0x00000800,
                0x00000020, 0x08020020, 0x00000800, 0x00020820,
                0x08000800, 0x00000020, 0x08000020, 0x08020000,
                0x08020020, 0x08000000, 0x00020000, 0x08000820,
                0x00000000, 0x08020820, 0x00020020, 0x08000020,
                0x08020000, 0x08000800, 0x08000820, 0x00000000,
                0x08020820, 0x00020800, 0x00020800, 0x00000820,
                0x00000820, 0x00020020, 0x08000000, 0x08020800]
    S_P_box = [S_P_box0, S_P_box1, S_P_box2, S_P_box3, S_P_box4, S_P_box5, S_P_box6, S_P_box7]

    # result = ''
    result = 0
    for i in range(8):
        _ = R[i * 6:(i + 1) * 6]
        # result += bin(Sbox[i][int(_, base=2)])[2:].zfill(4)
        result ^= S_P_box[i][int(_, base=2)]
    # print(hex(int(result, base=2)))
    result = bin(result)[2:].zfill(32)
    return result  # 32bit


def one_round(L, R, K):  # L 32bit字符串, R 32bit字符串, K 48bit字符串
    L, R = R, bin(int(S_P_box(E(R, K)), base=2) ^ int(L, base=2))[2:].zfill(32)
    return L, R


def generate_key(k):  # 产生16轮所需的所有秘钥  k 64bit字符串
    key_sub1 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18,
                10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36,
                63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22,
                14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4]
    key_sub2 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10,
                23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2,
                41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48,
                44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32]
    key_shift = [0, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1]

    K = ''
    for i in key_sub1:
        K += k[i - 1]

    key = ['']
    for i in range(1, 17):
        C, D = K[:28], K[28:]
        C = C[key_shift[i]:] + C[:key_shift[i]]
        D = D[key_shift[i]:] + D[:key_shift[i]]
        K = C + D
        list_ = ''
        for j in key_sub2:
            list_ += K[j - 1]
        key.append(list_)
    key.append('')  # 方便解密使用
    return key


def DES(s, key):  # s, k都为64 bit字符串

    for round_i in range(1, 17):
        # print(round_i)
        # print(hex(int(text,base=2)))
        L, R = s[0:32], s[32:]
        L, R = one_round(L, R, key[round_i])
        s = L + R
    s = s[32:] + s[:32]
    return s


def main():
    T = int(input())
    s = bin(int(input().strip(), base=16))[2:].zfill(64)
    k = bin(int(input().strip(), base=16))[2:].zfill(64)
    time_start = time.time()
    key = generate_key(k)
    s = IP_trans(s, 1)
    for i in range(T):
        s = DES(s, key)
    s = IP_trans(s, 0)
    print('0x' + hex(int(s, base=2))[2:].zfill(16))
    time_end = time.time()
    print(f'运行时间：{time_end - time_start:.16f}')


if __name__ == '__main__':
    main()

"""
优化内容如下
1. 对于同一秘钥，不再在DES算法中重复使用秘钥生成函数，而是使用一次，将子秘钥作为参数传入DES
2. 将S盒换成一维，如S盒第一行，0xxxx0对应0,2,4,……,30，减少拼接操作
3. 将S盒P盒合并，减少对P盒的移位操作，使用跟迅速的索引查找
4. 重复DES加密时删除多余的IP置换
"""
